//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference {
    using System.Runtime.Serialization;
    using System;

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="User")]
    [System.SerializableAttribute()]
    public class UserList : System.Collections.Generic.List<Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class User : Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.CalendarList CalendarsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventList EventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.CalendarList Calendars {
            get {
                return this.CalendarsField;
            }
            set {
                if ((object.ReferenceEquals(this.CalendarsField, value) != true)) {
                    this.CalendarsField = value;
                    this.RaisePropertyChanged("Calendars");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventList Events {
            get {
                return this.EventsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventsField, value) != true)) {
                    this.EventsField = value;
                    this.RaisePropertyChanged("Events");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Calendar))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Event))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Calendar", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Calendar : Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalendarNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventList EventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.UserList UsersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalendarName {
            get {
                return this.CalendarNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CalendarNameField, value) != true)) {
                    this.CalendarNameField = value;
                    this.RaisePropertyChanged("CalendarName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventList Events {
            get {
                return this.EventsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventsField, value) != true)) {
                    this.EventsField = value;
                    this.RaisePropertyChanged("Events");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.UserList Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Event : Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventType EventTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.UserList UsersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayColor {
            get {
                return this.DisplayColorField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayColorField, value) != true)) {
                    this.DisplayColorField = value;
                    this.RaisePropertyChanged("DisplayColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventName {
            get {
                return this.EventNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EventNameField, value) != true)) {
                    this.EventNameField = value;
                    this.RaisePropertyChanged("EventName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventType EventType {
            get {
                return this.EventTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EventTypeField, value) != true)) {
                    this.EventTypeField = value;
                    this.RaisePropertyChanged("EventType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDone {
            get {
                return this.IsDoneField;
            }
            set {
                if ((this.IsDoneField.Equals(value) != true)) {
                    this.IsDoneField = value;
                    this.RaisePropertyChanged("IsDone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.UserList Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventType", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class EventType : Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CalendarList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Calendar")]
    [System.SerializableAttribute()]
    public class CalendarList : System.Collections.Generic.List<Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Calendar> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="EventList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Event")]
    [System.SerializableAttribute()]
    public class EventList : System.Collections.Generic.List<Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Event> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="EventTypeList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="EventType")]
    [System.SerializableAttribute()]
    public class EventTypeList : System.Collections.Generic.List<Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventType> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalendarServiceReference.ICalendarService")]
    public interface ICalendarService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetAllUsers", ReplyAction="http://tempuri.org/ICalendarService/GetAllUsersResponse")]
        Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.UserList GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetAllUsers", ReplyAction="http://tempuri.org/ICalendarService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.UserList> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/Login", ReplyAction="http://tempuri.org/ICalendarService/LoginResponse")]
        Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User Login(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/Login", ReplyAction="http://tempuri.org/ICalendarService/LoginResponse")]
        System.Threading.Tasks.Task<Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User> LoginAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/InsertUser", ReplyAction="http://tempuri.org/ICalendarService/InsertUserResponse")]
        int InsertUser(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/InsertUser", ReplyAction="http://tempuri.org/ICalendarService/InsertUserResponse")]
        System.Threading.Tasks.Task<int> InsertUserAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/UpdateUser", ReplyAction="http://tempuri.org/ICalendarService/UpdateUserResponse")]
        int UpdateUser(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/UpdateUser", ReplyAction="http://tempuri.org/ICalendarService/UpdateUserResponse")]
        System.Threading.Tasks.Task<int> UpdateUserAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/DeleteUser", ReplyAction="http://tempuri.org/ICalendarService/DeleteUserResponse")]
        int DeleteUser(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/DeleteUser", ReplyAction="http://tempuri.org/ICalendarService/DeleteUserResponse")]
        System.Threading.Tasks.Task<int> DeleteUserAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetAllEventTypes", ReplyAction="http://tempuri.org/ICalendarService/GetAllEventTypesResponse")]
        Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventTypeList GetAllEventTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetAllEventTypes", ReplyAction="http://tempuri.org/ICalendarService/GetAllEventTypesResponse")]
        System.Threading.Tasks.Task<Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventTypeList> GetAllEventTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/InsertEventType", ReplyAction="http://tempuri.org/ICalendarService/InsertEventTypeResponse")]
        int InsertEventType(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventType eventType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/InsertEventType", ReplyAction="http://tempuri.org/ICalendarService/InsertEventTypeResponse")]
        System.Threading.Tasks.Task<int> InsertEventTypeAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventType eventType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/UpdateEventType", ReplyAction="http://tempuri.org/ICalendarService/UpdateEventTypeResponse")]
        int UpdateEventType(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventType eventType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/UpdateEventType", ReplyAction="http://tempuri.org/ICalendarService/UpdateEventTypeResponse")]
        System.Threading.Tasks.Task<int> UpdateEventTypeAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventType eventType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/DeleteEventType", ReplyAction="http://tempuri.org/ICalendarService/DeleteEventTypeResponse")]
        int DeleteEventType(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventType eventType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/DeleteEventType", ReplyAction="http://tempuri.org/ICalendarService/DeleteEventTypeResponse")]
        System.Threading.Tasks.Task<int> DeleteEventTypeAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventType eventType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetAllEvents", ReplyAction="http://tempuri.org/ICalendarService/GetAllEventsResponse")]
        Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventList GetAllEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetAllEvents", ReplyAction="http://tempuri.org/ICalendarService/GetAllEventsResponse")]
        System.Threading.Tasks.Task<Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventList> GetAllEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/InsertEvent", ReplyAction="http://tempuri.org/ICalendarService/InsertEventResponse")]
        int InsertEvent(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Event _event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/InsertEvent", ReplyAction="http://tempuri.org/ICalendarService/InsertEventResponse")]
        System.Threading.Tasks.Task<int> InsertEventAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Event _event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/UpdateEvent", ReplyAction="http://tempuri.org/ICalendarService/UpdateEventResponse")]
        int UpdateEvent(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Event _event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/UpdateEvent", ReplyAction="http://tempuri.org/ICalendarService/UpdateEventResponse")]
        System.Threading.Tasks.Task<int> UpdateEventAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Event _event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/DeleteEvent", ReplyAction="http://tempuri.org/ICalendarService/DeleteEventResponse")]
        int DeleteEvent(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Event _event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/DeleteEvent", ReplyAction="http://tempuri.org/ICalendarService/DeleteEventResponse")]
        System.Threading.Tasks.Task<int> DeleteEventAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Event _event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetAllCalendars", ReplyAction="http://tempuri.org/ICalendarService/GetAllCalendarsResponse")]
        Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.CalendarList GetAllCalendars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetAllCalendars", ReplyAction="http://tempuri.org/ICalendarService/GetAllCalendarsResponse")]
        System.Threading.Tasks.Task<Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.CalendarList> GetAllCalendarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/InsertCalendar", ReplyAction="http://tempuri.org/ICalendarService/InsertCalendarResponse")]
        int InsertCalendar(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Calendar calendar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/InsertCalendar", ReplyAction="http://tempuri.org/ICalendarService/InsertCalendarResponse")]
        System.Threading.Tasks.Task<int> InsertCalendarAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Calendar calendar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/UpdateCalendar", ReplyAction="http://tempuri.org/ICalendarService/UpdateCalendarResponse")]
        int UpdateCalendar(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Calendar calendar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/UpdateCalendar", ReplyAction="http://tempuri.org/ICalendarService/UpdateCalendarResponse")]
        System.Threading.Tasks.Task<int> UpdateCalendarAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Calendar calendar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/DeleteCalendar", ReplyAction="http://tempuri.org/ICalendarService/DeleteCalendarResponse")]
        int DeleteCalendar(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Calendar calendar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/DeleteCalendar", ReplyAction="http://tempuri.org/ICalendarService/DeleteCalendarResponse")]
        System.Threading.Tasks.Task<int> DeleteCalendarAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Calendar calendar);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalendarServiceChannel : Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.ICalendarService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalendarServiceClient : System.ServiceModel.ClientBase<Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.ICalendarService>, Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.ICalendarService {
        
        public CalendarServiceClient() {
        }
        
        public CalendarServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalendarServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalendarServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalendarServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.UserList GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.UserList> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User Login(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User user) {
            return base.Channel.Login(user);
        }
        
        public System.Threading.Tasks.Task<Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User> LoginAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User user) {
            return base.Channel.LoginAsync(user);
        }
        
        public int InsertUser(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User user) {
            return base.Channel.InsertUser(user);
        }
        
        public System.Threading.Tasks.Task<int> InsertUserAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User user) {
            return base.Channel.InsertUserAsync(user);
        }
        
        public int UpdateUser(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public int DeleteUser(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User user) {
            return base.Channel.DeleteUser(user);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUserAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.User user) {
            return base.Channel.DeleteUserAsync(user);
        }
        
        public Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventTypeList GetAllEventTypes() {
            return base.Channel.GetAllEventTypes();
        }
        
        public System.Threading.Tasks.Task<Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventTypeList> GetAllEventTypesAsync() {
            return base.Channel.GetAllEventTypesAsync();
        }
        
        public int InsertEventType(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventType eventType) {
            return base.Channel.InsertEventType(eventType);
        }
        
        public System.Threading.Tasks.Task<int> InsertEventTypeAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventType eventType) {
            return base.Channel.InsertEventTypeAsync(eventType);
        }
        
        public int UpdateEventType(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventType eventType) {
            return base.Channel.UpdateEventType(eventType);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEventTypeAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventType eventType) {
            return base.Channel.UpdateEventTypeAsync(eventType);
        }
        
        public int DeleteEventType(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventType eventType) {
            return base.Channel.DeleteEventType(eventType);
        }
        
        public System.Threading.Tasks.Task<int> DeleteEventTypeAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventType eventType) {
            return base.Channel.DeleteEventTypeAsync(eventType);
        }
        
        public Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventList GetAllEvents() {
            return base.Channel.GetAllEvents();
        }
        
        public System.Threading.Tasks.Task<Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.EventList> GetAllEventsAsync() {
            return base.Channel.GetAllEventsAsync();
        }
        
        public int InsertEvent(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Event _event) {
            return base.Channel.InsertEvent(_event);
        }
        
        public System.Threading.Tasks.Task<int> InsertEventAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Event _event) {
            return base.Channel.InsertEventAsync(_event);
        }
        
        public int UpdateEvent(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Event _event) {
            return base.Channel.UpdateEvent(_event);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEventAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Event _event) {
            return base.Channel.UpdateEventAsync(_event);
        }
        
        public int DeleteEvent(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Event _event) {
            return base.Channel.DeleteEvent(_event);
        }
        
        public System.Threading.Tasks.Task<int> DeleteEventAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Event _event) {
            return base.Channel.DeleteEventAsync(_event);
        }
        
        public Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.CalendarList GetAllCalendars() {
            return base.Channel.GetAllCalendars();
        }
        
        public System.Threading.Tasks.Task<Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.CalendarList> GetAllCalendarsAsync() {
            return base.Channel.GetAllCalendarsAsync();
        }
        
        public int InsertCalendar(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Calendar calendar) {
            return base.Channel.InsertCalendar(calendar);
        }
        
        public System.Threading.Tasks.Task<int> InsertCalendarAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Calendar calendar) {
            return base.Channel.InsertCalendarAsync(calendar);
        }
        
        public int UpdateCalendar(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Calendar calendar) {
            return base.Channel.UpdateCalendar(calendar);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCalendarAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Calendar calendar) {
            return base.Channel.UpdateCalendarAsync(calendar);
        }
        
        public int DeleteCalendar(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Calendar calendar) {
            return base.Channel.DeleteCalendar(calendar);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCalendarAsync(Wpf_TimeCraft_Calendar_IlayBiton.CalendarServiceReference.Calendar calendar) {
            return base.Channel.DeleteCalendarAsync(calendar);
        }
    }
}
